/**
 * Ask EU users whether or not they want to opt-in to web tracking & personalization
 */
!function() {

    // Expose loadGoogleTagManager on window so it can be used by Gravity Forms 
    // See shared-gc/includes/gravity-forms/gdpr-opt-in.js
    window.loadGoogleTagManager = loadGoogleTagManager;

    // LocalStorage keys
    var acceptKey = 'GDPR-Accept', // Values: 'GDPR-Accept' -or- 'Non-EU'
        optoutKey = 'GDPR-OptOut';

    // User has alread opted-in (or is non-EU)
    if ( localStorage.getItem(acceptKey) ) {
        loadGoogleTagManager();
        return;
    }

    // User has already opted-out. Don't track.
    if ( localStorage.getItem(optoutKey) ) {
        return;
    }

    // Lookup user by IP
    checkCountryCode();

    function checkCountryCode() {

        // Paid account:
        // https://api.ipstack.com/check?access_key=b7037b4e99f5569546add6c8c4868910

        // Free alternative:
        // https://json.geoiplookup.io/

        load('https://api.ipstack.com/check?access_key=b7037b4e99f5569546add6c8c4868910', 'json').then(function(data) {

            if ( ! data || ! data.continent_code ) {
                console.error('Invalid country code data');
                return;
            }

            // EU User - show consent modal
            if ( data.continent_code.toLowerCase() == 'eu' ) {
                askForConsent();
            }
            // Non-EU User - opt-in by default
            else {
                // Persist choice in LocalStorage and load Google Tag Manager
                localStorage.setItem(acceptKey, 'Non-EU');
                loadGoogleTagManager();
            }
        });
    };

    // Ask EU user for consent
    function askForConsent() {

        load('https://www.goshen.edu/js/GDPR/tracking-notice.html', 'document').then(function(html) {

            var modal = html.getElementById('gdpr-modal');

			document.body.appendChild(modal);

        });

    };

    // Accept tracking
    GDPRAccept = function() {

        // Persist choice in LocalStorage and load Google Tag Manager
        localStorage.setItem(acceptKey, acceptKey);
        loadGoogleTagManager();

        // Close modal
    	closeModal();
	}

    // Opt-out of tracking
    GDPROptOut = function() {

        // Persist choice in LocalStorage
        localStorage.setItem(optoutKey, optoutKey);

        // Close modal
		closeModal();
    }

	function closeModal() {
		var modal = document.getElementById('gdpr-modal');
		modal.parentElement.removeChild(modal);
	}

    /**
     * Load Google Tag Manager
     */
    function loadGoogleTagManager() {

        // Ensure it hasn't already been loaded
        if ( document.querySelector('[src*=googletagmanager]') ) return;

        // Copy and paste loading snippet here...
        (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-NQKNP9');
    }

    /**
     * Load JSON or HTML document
     */
    function load(url, type) {

        return new Promise( function(resolve, reject)
        {
            var request = new XMLHttpRequest();

            request.onload = function() {
                if (request.status >= 200 && request.status < 400) {

                    // Parse JSON
                    if ( type === 'json' ) {
						if (request.response != null) {
							resolve(request.response);
						}
						else {
                            reject( 'Unable to parse response as JSON: '+ url );
                        }
                    }

                    // Parse HTML document
                    else if ( type === 'document' ) {
                        resolve(request.responseXML);
                    }

                    // Just return text
                    else {
                        resolve(request.responseText)
                    }

                } else {
                    reject( 'Server returned an error: '+ url );
                }
            };

            request.onerror = request.onabort = reject;

            request.open('GET', url, true);

            if ( type ) request.responseType = type;

            request.send();

        });
    }

}();
